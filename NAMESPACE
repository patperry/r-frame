## Imports
importFrom(utf8, as_utf8)
importFrom(utf8, utf8_encode)
importFrom(utf8, utf8_format)
importFrom(utf8, utf8_valid)
importFrom(utf8, utf8_width)

## Exports

### record

export(record)
export(is.record)
export(as.record)

S3method(as.record, default); export(as.record.default)
S3method(c, record); export(c.record)

S3method(`length<-`, record)
S3method(`names<-`, record)
S3method(`$`, record)
S3method(`$<-`, record)
S3method(`[`, record)
S3method(`[<-`, record)
S3method(`[[`, record)
S3method(`[[<-`, record)

S3method(format, record); export(format.record)
S3method(print, record);  export(print.record)


### normal

export(is.normal)
export(as.normal)

S3method(as.normal, default)   ; export(as.normal.default)  
S3method(as.normal, character) ; export(as.normal.character)
S3method(as.normal, double)    ; export(as.normal.double)
S3method(as.normal, complex)   ; export(as.normal.complex)

S3method(as.normal.character, default) ; export(as.normal.character.default)
S3method(as.normal.double, default)    ; export(as.normal.double.default)
S3method(as.normal.complex, default)   ; export(as.normal.complex.default)


### functor

export(do)

export(map_)
S3method(map_, default); export(map_.default)

export(map)
S3method(map, default)           ; export(map.default)

export(NULL.map)
S3method(NULL.map, default)      ; export(NULL.map.default)

export(logical.map)
S3method(logical.map, default)   ; export(logical.map.default)

export(raw.map)
S3method(raw.map, default)       ; export(raw.map.default)

export(integer.map)
S3method(integer.map, default)   ; export(integer.map.default)

export(double.map)
S3method(double.map, default)    ; export(double.map.default)

export(complex.map)
S3method(complex.map, default)   ; export(complex.map.default)

export(character.map)
S3method(character.map, default) ; export(character.map.default)

export(list.map)
S3method(list.map, default)      ; export(list.map.default)

export(numeric.map)


## old # exports (need fixing)
# export(`$.dataset`)
# export(`$<-.dataset`)
# export(`[.dataset`)
# export(`[<-.dataset`)
# export(`[[.dataset`)
# export(`[[<-.dataset`)
# export(anyDuplicated.dataset)
# export(anyDuplicated.keyset)
# export(as.data.frame.dataset)
# export(as.list.dataset)
# export(as.matrix.dataset)
# export(as_dataset)
# export(as_dataset.array)
# export(as_dataset.data.frame)
# export(as_dataset.dataset)
# export(as_dataset.default)
# export(as_dataset.list)
# export(as_dataset.matrix)
# export(as_keyset)
# export(as_keyset.dataset)
# export(as_keyset.default)
# export(as_keyset.keyset)
# export(as_simple_vector)
# export(as_simple_vector.default)
# export(cbind.dataset)
# export(dataset)
# export(duplicated.dataset)
# export(duplicated.keyset)
# export(format.dataset)
# export(framed)
# export(framed.dataset)
# export(framed.default)
# export(grouped)
# export(grouped.dataset)
# export(grouped.default)
# export(is_dataset)
# export(is_keyset)
# export(is_simple_dataset)
# export(is_simple_vector)
# export(keys)
# export(keys.dataset)
# export(keys.default)
# export(keylevels)
# export(keylevels.default)
# export(keylevels.keyset)
# export(`keys<-`)
# export(`keys<-.dataset`)
# export(`keys<-.keyset`)
# export(keyset)
# export(keyrows)
# export(keyrows.default)
# export(keyrows.keyset)
# export(keyrows.NULL)
# export(lookup)
# export(print.dataset)
# export(reorder.dataset)
# export(rbind.dataset)
# export(restrict)
# export(restrict_slice)
# export(restrict_slice.default)
# export(rowid)
# export(rowid.default)
# export(rowid.keyset)
# export(rowid.NULL)
# export(schema)
# export(schema.dataset)
# export(schema.default)
# export(unique.dataset)
# export(unique.keyset)

## Deprecated
# (none)


## New S3 methods
# S3method(as_dataset, array)
# S3method(as_dataset, data.frame)
# S3method(as_dataset, dataset)
# S3method(as_dataset, default)
# S3method(as_dataset, list)
# S3method(as_dataset, matrix)
# S3method(as_keyset, dataset)
# S3method(as_keyset, default)
# S3method(as_keyset, keyset)
# S3method(as_simple_vector, default)
# S3method(keys, dataset)
# S3method(keys, default)
# S3method(`keys<-`, dataset)
# S3method(`keys<-`, keyset)
# S3method(keylevels, default)
# S3method(keylevels, keyset)
# S3method(keyrows, default)
# S3method(keyrows, keyset)
# S3method(keyrows, NULL)
# S3method(framed, dataset)
# S3method(framed, default)
# S3method(grouped, dataset)
# S3method(grouped, default)
# S3method(restrict_slice, default)
# S3method(rowid, default)
# S3method(rowid, keyset)
# S3method(rowid, NULL)
# S3method(schema, dataset)
# S3method(schema, default)


## Base S3 methods

### dataset
# S3method(`$`, dataset)
# S3method(`$<-`, dataset)
# S3method(`[`, dataset)
# S3method(`[<-`, dataset)
# S3method(`[[`, dataset)
# S3method(`[[<-`, dataset)
# S3method(anyDuplicated, dataset)
# S3method(anyDuplicated, keyset)
# S3method(as.data.frame, dataset)
# S3method(as.list, dataset)
# S3method(as.matrix, dataset)
# S3method(cbind, dataset)
# S3method(`dimnames<-`, dataset)
# S3method(duplicated, dataset)
# S3method(duplicated, keyset)
# S3method(format, dataset)
# S3method(`names<-`, dataset)
# S3method(print, dataset)
# S3method(rbind, dataset)
# S3method(reorder, dataset)
# S3method(row.names, dataset)
# S3method(`row.names<-`, dataset)
# S3method(transform, dataset)
# S3method(unique, dataset)
# S3method(unique, keyset)
